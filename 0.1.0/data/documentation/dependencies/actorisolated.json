{"seeAlsoSections":[{"title":"Concurrency support","identifiers":["doc:\/\/Dependencies\/documentation\/Dependencies\/LockIsolated","doc:\/\/Dependencies\/documentation\/Dependencies\/UncheckedSendable"],"generated":true}],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ActorIsolated"}],"title":"ActorIsolated","roleHeading":"Class","role":"symbol","symbolKind":"class","externalID":"s:12Dependencies13ActorIsolatedC","modules":[{"name":"Dependencies"}],"navigatorTitle":[{"kind":"identifier","text":"ActorIsolated"}]},"abstract":[{"type":"text","text":"A generic wrapper for isolating a mutable value to an actor."}],"sections":[],"identifier":{"url":"doc:\/\/Dependencies\/documentation\/Dependencies\/ActorIsolated","interfaceLanguage":"swift"},"relationshipsSections":[{"identifiers":["doc:\/\/Dependencies\/s8SendableP","doc:\/\/Dependencies\/ScA","doc:\/\/Dependencies\/12_Concurrency8AnyActorP"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"hierarchy":{"paths":[["doc:\/\/Dependencies\/documentation\/Dependencies"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/Dependencies\/documentation\/Dependencies\/ActorIsolated\/init(_:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/Dependencies\/documentation\/Dependencies\/ActorIsolated\/value"]},{"title":"Instance Methods","identifiers":["doc:\/\/Dependencies\/documentation\/Dependencies\/ActorIsolated\/setValue(_:)","doc:\/\/Dependencies\/documentation\/Dependencies\/ActorIsolated\/withValue(_:)-3bki7","doc:\/\/Dependencies\/documentation\/Dependencies\/ActorIsolated\/withValue(_:)-805p"]},{"title":"Subscripts","identifiers":["doc:\/\/Dependencies\/documentation\/Dependencies\/ActorIsolated\/subscript(dynamicMember:)"]}],"variants":[{"paths":["\/documentation\/dependencies\/actorisolated"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"attribute","text":"@dynamicMemberLookup"},{"kind":"text","text":" "},{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"actor"},{"kind":"text","text":" "},{"kind":"identifier","text":"ActorIsolated"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This type is most useful when writing tests for when you want to inspect what happens inside an"},{"type":"text","text":" "},{"type":"text","text":"effect. For example, suppose you have a feature such that when a button is tapped you track some"},{"type":"text","text":" "},{"type":"text","text":"analytics:"}]},{"type":"codeListing","syntax":"swift","code":["class FeatureModel: ObservableObject {","  @Dependency(\\.analytics) var analytics","  \/\/ ...","  func buttonTapped() {","    \/\/ ...","    await self.analytics.track(\"Button tapped\")","  }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Then, in tests we can construct an analytics client that appends events to a mutable array"},{"type":"text","text":" "},{"type":"text","text":"rather than actually sending events to an analytics server. However, in order to do this in a"},{"type":"text","text":" "},{"type":"text","text":"safe way we should use an actor, and "},{"type":"codeVoice","code":"ActorIsolated"},{"type":"text","text":" makes this easy:"}]},{"type":"codeListing","syntax":"swift","code":["func testAnalytics() async {","  let events = ActorIsolated<[String]>([])","  let model = withDependencies {","    $0.analytics = AnalyticsClient(","      track: { event in await events.withValue { $0.append(event) } }","    )","  } operation: {","    FeatureModel()","  }","","  model.buttonTapped()","  await events.withValue {","    XCTAssertEqual($0, [\"Button tapped\"])","  }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To synchronously isolate a value, see "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Dependencies\/documentation\/Dependencies\/LockIsolated"},{"type":"text","text":"."}]}]}],"references":{"doc://Dependencies/ScA":{"type":"unresolvable","title":"_Concurrency.Actor","identifier":"doc:\/\/Dependencies\/ScA"},"doc://Dependencies/documentation/Dependencies/ActorIsolated/setValue(_:)":{"role":"symbol","title":"setValue(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"setValue"},{"kind":"text","text":"(() "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"}],"abstract":[{"type":"text","text":"Overwrite the isolated value with a new value."}],"identifier":"doc:\/\/Dependencies\/documentation\/Dependencies\/ActorIsolated\/setValue(_:)","kind":"symbol","type":"topic","url":"\/documentation\/dependencies\/actorisolated\/setvalue(_:)"},"doc://Dependencies/documentation/Dependencies/ActorIsolated/withValue(_:)-3bki7":{"role":"symbol","title":"withValue(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"withValue"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">(("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"}],"abstract":[{"type":"text","text":"Perform an operation with isolated access to the underlying value."}],"identifier":"doc:\/\/Dependencies\/documentation\/Dependencies\/ActorIsolated\/withValue(_:)-3bki7","kind":"symbol","type":"topic","url":"\/documentation\/dependencies\/actorisolated\/withvalue(_:)-3bki7"},"doc://Dependencies/documentation/Dependencies/UncheckedSendable":{"role":"symbol","title":"UncheckedSendable","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"UncheckedSendable"}],"abstract":[{"type":"text","text":"A generic wrapper for turning any non-"},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":" type into a "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":" one, in an unchecked"},{"type":"text","text":" "},{"type":"text","text":"manner."}],"identifier":"doc:\/\/Dependencies\/documentation\/Dependencies\/UncheckedSendable","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"UncheckedSendable"}],"url":"\/documentation\/dependencies\/uncheckedsendable"},"doc://Dependencies/s8SendableP":{"type":"unresolvable","title":"Swift.Sendable","identifier":"doc:\/\/Dependencies\/s8SendableP"},"doc://Dependencies/documentation/Dependencies/LockIsolated":{"role":"symbol","title":"LockIsolated","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockIsolated"}],"abstract":[{"type":"text","text":"A generic wrapper for isolating a mutable value with a lock."}],"identifier":"doc:\/\/Dependencies\/documentation\/Dependencies\/LockIsolated","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"LockIsolated"}],"url":"\/documentation\/dependencies\/lockisolated"},"doc://Dependencies/documentation/Dependencies/ActorIsolated/init(_:)":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"(() "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"}],"abstract":[{"type":"text","text":"Initializes actor-isolated state around a value."}],"identifier":"doc:\/\/Dependencies\/documentation\/Dependencies\/ActorIsolated\/init(_:)","kind":"symbol","type":"topic","url":"\/documentation\/dependencies\/actorisolated\/init(_:)"},"doc://Dependencies/12_Concurrency8AnyActorP":{"type":"unresolvable","title":"_Concurrency.AnyActor","identifier":"doc:\/\/Dependencies\/12_Concurrency8AnyActorP"},"doc://Dependencies/documentation/Dependencies":{"role":"collection","title":"Dependencies","abstract":[{"type":"text","text":"A dependency management library inspired by SwiftUI’s “environment.”"}],"identifier":"doc:\/\/Dependencies\/documentation\/Dependencies","kind":"symbol","type":"topic","url":"\/documentation\/dependencies"},"doc://Dependencies/documentation/Dependencies/ActorIsolated":{"role":"symbol","title":"ActorIsolated","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ActorIsolated"}],"abstract":[{"type":"text","text":"A generic wrapper for isolating a mutable value to an actor."}],"identifier":"doc:\/\/Dependencies\/documentation\/Dependencies\/ActorIsolated","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ActorIsolated"}],"url":"\/documentation\/dependencies\/actorisolated"},"doc://Dependencies/documentation/Dependencies/ActorIsolated/value":{"role":"symbol","title":"value","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"}],"abstract":[{"type":"text","text":"The actor-isolated value."}],"identifier":"doc:\/\/Dependencies\/documentation\/Dependencies\/ActorIsolated\/value","kind":"symbol","type":"topic","url":"\/documentation\/dependencies\/actorisolated\/value"},"doc://Dependencies/documentation/Dependencies/ActorIsolated/subscript(dynamicMember:)":{"role":"symbol","title":"subscript(dynamicMember:)","fragments":[{"kind":"keyword","text":"subscript"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Subject"},{"kind":"text","text":">("},{"kind":"externalParam","text":"dynamicMember"},{"kind":"text","text":" _: "},{"kind":"typeIdentifier","text":"KeyPath","preciseIdentifier":"s:s7KeyPathC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Subject"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Subject"}],"abstract":[],"identifier":"doc:\/\/Dependencies\/documentation\/Dependencies\/ActorIsolated\/subscript(dynamicMember:)","kind":"symbol","type":"topic","url":"\/documentation\/dependencies\/actorisolated\/subscript(dynamicmember:)"},"doc://Dependencies/documentation/Dependencies/ActorIsolated/withValue(_:)-805p":{"role":"symbol","title":"withValue(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"withValue"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">(("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"}],"abstract":[],"identifier":"doc:\/\/Dependencies\/documentation\/Dependencies\/ActorIsolated\/withValue(_:)-805p","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/dependencies\/actorisolated\/withvalue(_:)-805p"}}}